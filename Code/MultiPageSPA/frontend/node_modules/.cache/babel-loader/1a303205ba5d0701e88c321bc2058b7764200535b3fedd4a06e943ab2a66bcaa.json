{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bengi\\\\Documents\\\\GitHub\\\\React-Udemy-Course\\\\Code\\\\MultiPageSPA\\\\frontend\\\\src\\\\App.js\";\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 59\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 27\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: '/events/:id'\n  }]\n}, {}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","jsxDEV","_jsxDEV","router","path","element","Root","fileName","_jsxFileName","lineNumber","columnNumber","children","index","HomePage","EventsPage","App","_c","$RefreshReg$"],"sources":["C:/Users/bengi/Documents/GitHub/React-Udemy-Course/Code/MultiPageSPA/frontend/src/App.js"],"sourcesContent":["import { RouterProvider, createBrowserRouter } from 'react-router-dom';\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst router = createBrowserRouter([{ path: \"/\", element: <Root />, children: [\n  { index: true, element: <HomePage /> },\n  { path: '/events', element: <EventsPage /> },\n  { path: '/events/:id',  }\n] }, {\n  \n}]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;;AAEtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGH,mBAAmB,CAAC,CAAC;EAAEI,IAAI,EAAE,GAAG;EAAEC,OAAO,eAAEH,OAAA,CAACI,IAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EAAEC,QAAQ,EAAE,CAC5E;IAAEC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACW,QAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAI,CAAC,EACtC;IAAEN,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAEH,OAAA,CAACY,UAAU;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAI,CAAC,EAC5C;IAAEN,IAAI,EAAE;EAAgB,CAAC;AACzB,CAAC,EAAE,CAEL,CAAC,CAAC,CAAC;AAEH,SAASW,GAAGA,CAAA,EAAG;EACb,oBAAOb,OAAA,CAACH,cAAc;IAACI,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC3C;AAACM,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}