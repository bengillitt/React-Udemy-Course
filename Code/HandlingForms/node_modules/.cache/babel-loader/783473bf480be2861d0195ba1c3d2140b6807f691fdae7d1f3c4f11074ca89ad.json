{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bengi\\\\Documents\\\\GitHub\\\\React-Udemy-Course\\\\Code\\\\HandlingForms\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const isNotEmpty = value => value.trim() !== \"\";\n  const isEmail = value => value.includes(\"@\");\n  const {\n    value: firstNameValue,\n    valueIsValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangedHandler,\n    inputBlurHandler: firstNameBlurredHandler,\n    reset: firstNameReset\n  } = useInput(isNotEmpty);\n  const {\n    value: lastNameValue,\n    valueIsValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangedHandler,\n    inputBlurHandler: lastNameBlurredHandler,\n    reset: lastNameReset\n  } = useInput(isNotEmpty);\n  const {\n    value: emailValue,\n    valueIsValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurredHandler,\n    reset: emailReset\n  } = useInput(isEmail);\n  let formIsValid = false;\n  const formSubmissionHandler = event => {\n    if (firstNameIsValid && lastNameIsValid && emailIsValid) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangedHandler,\n          onBlur: firstNameBlurredHandler,\n          value: firstNameValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First Name cannot be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangedHandler,\n          onBlur: lastNameBlurredHandler,\n          value: lastNameValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last Name cannot be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailChangedHandler,\n        onBlur: emailBlurredHandler,\n        value: emailValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"7DmFR16IlrvUDHHxHC8ggTE8k/k=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","BasicForm","props","_s","isNotEmpty","value","trim","isEmail","includes","firstNameValue","valueIsValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangedHandler","inputBlurHandler","firstNameBlurredHandler","reset","firstNameReset","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangedHandler","lastNameBlurredHandler","lastNameReset","emailValue","emailIsValid","emailHasError","emailChangedHandler","emailBlurredHandler","emailReset","formIsValid","formSubmissionHandler","event","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","_c","$RefreshReg$"],"sources":["C:/Users/bengi/Documents/GitHub/React-Udemy-Course/Code/HandlingForms/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const isNotEmpty = (value) => value.trim() !== \"\";\n  const isEmail = (value) => value.includes(\"@\");\n\n  const {\n    value: firstNameValue,\n    valueIsValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangedHandler,\n    inputBlurHandler: firstNameBlurredHandler,\n    reset: firstNameReset,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: lastNameValue,\n    valueIsValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangedHandler,\n    inputBlurHandler: lastNameBlurredHandler,\n    reset: lastNameReset,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: emailValue,\n    valueIsValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurredHandler,\n    reset: emailReset,\n  } = useInput(isEmail);\n\n\n  let formIsValid = false;\n\n  const formSubmissionHandler = event => {\n    if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n\n    }\n  };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className=\"control-group\">\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangedHandler}\n            onBlur={firstNameBlurredHandler}\n            value={firstNameValue}\n          />\n          {firstNameHasError && (\n            <p className=\"error-text\">First Name cannot be empty</p>\n          )}\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangedHandler}\n            onBlur={lastNameBlurredHandler}\n            value={lastNameValue}\n          />\n          {lastNameHasError && (\n            <p className=\"error-text\">Last Name cannot be empty</p>\n          )}\n        </div>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={emailChangedHandler}\n          onBlur={emailBlurredHandler}\n          value={emailValue}\n        />\n        {emailHasError && (<p className=\"error-text\">Invalid Email</p>)}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}